// <auto-generated />
using System;
using ManagerPostoffices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagerPostoffices.Migrations
{
    [DbContext(typeof(ManagerPostofficesDbContext))]
    partial class ManagerPostofficesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManagerPostoffices.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("RecipientId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "City1",
                            RecipientId = 1,
                            State = "State1",
                            Street = "123 Main St"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "City2",
                            RecipientId = 2,
                            State = "State2",
                            Street = "456 Oak St"
                        });
                });

            modelBuilder.Entity("ManagerPostoffices.Models.DeliveryStatus", b =>
                {
                    b.Property<int>("DeliveryStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryStatusId"), 1L, 1);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCancelled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeDelivered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeOutForDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("DeliveryStatusId");

                    b.ToTable("DeliveryStatuses");

                    b.HasData(
                        new
                        {
                            DeliveryStatusId = 1,
                            Status = "In Progress",
                            StatusDescription = "Package is being processed",
                            UpdateTime = new DateTime(2023, 12, 4, 13, 59, 55, 311, DateTimeKind.Local).AddTicks(8882)
                        },
                        new
                        {
                            DeliveryStatusId = 2,
                            Status = "Delivered",
                            StatusDescription = "Package has been delivered",
                            UpdateTime = new DateTime(2023, 12, 4, 13, 59, 55, 311, DateTimeKind.Local).AddTicks(8892)
                        });
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransportId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PackageId");

                    b.HasIndex("AddressId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("TransportId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            PackageId = 1,
                            AddressId = 1,
                            RecipientId = 1,
                            Size = "Small",
                            TransportId = 1,
                            Value = 50m,
                            Weight = 2.5
                        },
                        new
                        {
                            PackageId = 2,
                            AddressId = 2,
                            RecipientId = 2,
                            Size = "Large",
                            TransportId = 2,
                            Value = 100m,
                            Weight = 5.0
                        });
                });

            modelBuilder.Entity("ManagerPostoffices.Models.PackageDeliveryHistory", b =>
                {
                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrentStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("PackageId", "DeliveryStatusId");

                    b.HasIndex("DeliveryStatusId");

                    b.ToTable("PackageDeliveryHistory");

                    b.HasData(
                        new
                        {
                            PackageId = 1,
                            DeliveryStatusId = 1,
                            IsCurrentStatus = true,
                            TimeStamp = new DateTime(2023, 12, 4, 13, 59, 55, 311, DateTimeKind.Local).AddTicks(8932)
                        },
                        new
                        {
                            PackageId = 2,
                            DeliveryStatusId = 2,
                            IsCurrentStatus = true,
                            TimeStamp = new DateTime(2023, 12, 4, 13, 59, 55, 311, DateTimeKind.Local).AddTicks(8933)
                        });
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Recipient", b =>
                {
                    b.Property<int>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipientId"), 1L, 1);

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipientId");

                    b.ToTable("Recipients");

                    b.HasData(
                        new
                        {
                            RecipientId = 1,
                            ContactInfo = "john@example.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            RecipientId = 2,
                            ContactInfo = "jane@example.com",
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Transport", b =>
                {
                    b.Property<int>("TransportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransportId");

                    b.ToTable("Transports");

                    b.HasData(
                        new
                        {
                            TransportId = 1,
                            Name = "Carrier1"
                        },
                        new
                        {
                            TransportId = 2,
                            Name = "Carrier2"
                        });
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Address", b =>
                {
                    b.HasOne("ManagerPostoffices.Models.Recipient", "Recipient")
                        .WithMany("Addresses")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Package", b =>
                {
                    b.HasOne("ManagerPostoffices.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManagerPostoffices.Models.Recipient", "Recipient")
                        .WithMany("Packages")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagerPostoffices.Models.Transport", "Transport")
                        .WithMany("Packages")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Recipient");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("ManagerPostoffices.Models.PackageDeliveryHistory", b =>
                {
                    b.HasOne("ManagerPostoffices.Models.DeliveryStatus", "DeliveryStatus")
                        .WithMany("PackageDeliveryHistory")
                        .HasForeignKey("DeliveryStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManagerPostoffices.Models.Package", "Package")
                        .WithMany("PackageDeliveryHistory")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryStatus");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("ManagerPostoffices.Models.DeliveryStatus", b =>
                {
                    b.Navigation("PackageDeliveryHistory");
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Package", b =>
                {
                    b.Navigation("PackageDeliveryHistory");
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Recipient", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Packages");
                });

            modelBuilder.Entity("ManagerPostoffices.Models.Transport", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
